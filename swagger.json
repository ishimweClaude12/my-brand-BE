{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "description": "A humble blogs sharing and learning app for everyone",
      "title": "Capstone Project Backend API"
    },
    "servers": [
      
      {
        "url": "https://my-brand-be-ddpa.onrender.com/api",
        "description": "hosted server"
      }
    ],
  
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "description": "To authenticate, include a valid JWT token in the Authorization header using the Bearer scheme. Contact the API administrator to obtain a token."
        }
      },
      "responses": {
        "NotFound": {
          "description": "The specified resource was not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Resource not found"
                  }
                }
              }
            }
          }
        },
        "BadRequest": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Bad Request"
                  }
                }
              }
            }
          }
        },
        "UnauthorizedError": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Access token is missing or invalid"
                  }
                }
              }
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "ConflictError": {
          "description": "Resource exists",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Resource exists"
                  }
                }
              }
            }
          }
        },
        "ValidationError": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Validation error"
                  }
                }
              }
            }
          }
        },
        "ServerError": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Internal server error"
                  }
                }
              }
            }
          }
        }
      },
      "schemas": {
        "UserSignup": {
          "required": ["firstName", "lastName", "email", "password"],
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string",
              "description": "firstName",
              "example": "Johen"
            },
            "lastName": {
              "type": "string",
              "description": "lastName",
              "example": "Do"
            },
            "email": {
              "type": "string",
              "description": "Email",
              "example": "example@aol.com"
            },
  
            "password": {
              "type": "string",
              "description": "Password",
              "example": "Password1234??"
            }
          }
        },
        "UserLogin": {
          "required": ["email", "password"],
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "your email",
              "example": "example1@email.com"
            },
            "password": {
              "type": "string",
              "description": "your password",
              "example": "password123??"
            }
          }
        },
        "Blog": {
          "required": ["title", "url", "content"],
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title fo blog",
              "example": "Amazing blog"
            },
            "url": {
              "type": "file",
              "description": "Image link"
            
            },
            "content": {
              "type": "string",
              "description": "Content",
              "example": "Content of the blog"
            }
          }
        },
        "Comment": {
          "required": ["comment"],
          "type": "object",
          "properties": {
            "comment": {
              "type": "string",
              "description": "Comment",
              "example": "Content of the comment"
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "Authentication",
        "description": "User Endpoints"
      },
      {
        "name": "Users",
        "description": "User actions"
      },
      {
        "name": "Blog",
        "description": "Blog actions"
      },
      {
        "name": "Comments",
        "description":"Commenting actions"
      },
      {
        "name": "Like",
        "description":"Liking a comment actions"
      }
    ],
    "schemes": ["http", "https"],
    "security": [
      {
        "bearerAuth": []
      }
    ],
  
    "paths": {
      "/users/register": {
        "post": {
          "tags": ["Authentication"],
          "summary": "User signup",
          "description": "Creat user account",
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignup"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully!"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
  
      "/users/login": {
        "post": {
          "tags": ["Authentication"],
          "summary": "User login",
          "description": "User login",
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "You logged in successfully!"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
  
      "/users": {
        "get": {
          "tags": ["Users"],
          "summary": "Get all users",
          "description": "Find all users in the system.",
          "responses": {
            "200": {
              "description": "Users retrieved successfully!"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": ["Users"],
          "summary": "User by Id",
          "description": "Get single user based on id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1d9379f46680630b65fd0"
              },
              "description": "User Id"
            }
          ],
          "responses": {
            "200": {
              "description": "user found."
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/users/{Id}": {
        "delete": {
          "tags": ["Users"],
          "summary": "Delete user",
          "description": "Delete user based on user id.",
          "parameters": [
            {
              "name": "Id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1e42fcf8e7ad4a9g38901"
              },
              "description": "User Id"
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfull!"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/users/{iD}": {
        "patch": {
          "tags": ["Users"],
          "summary": "Update user",
          "description": "Update user based on user id.",
          "parameters": [
            {
              "name": "iD",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1e42fcf8e7ad4a9g38901"
              },
              "description": "User Id"
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfull!"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
  
      "/blogs": {
        "get": {
          "tags": ["Blog"],
          "summary": "Get all Blogs",
          "description": "Getting all blogs un the system",
          "responses": {
            "201": {
              "description": "Blogs Retrieved successfully!"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },

      "/blogs/{id}":{
        "get": {
          "tags": ["Blog"],
          "summary": "Get A Single Blog ",
          "description": "Pass in an ID of the blog to get it",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1d9379f46680630b65fd0"
              },
              "description": "Blog ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Blog found."
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/new": {
        "post": {
          "tags": ["Blog"],
          "summary": "Create a Blog",
          "description": "Keep in mind that only an Admin can create a blog",
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blog"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Blog created successfully!"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/edit/{id}":{
        "patch": {
          "tags": ["Blog"],
          "summary": "Update A Blog",
          "description": "Update Blog based on Blog id.",
          "parameters": [
            {
              "name": "iD",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1e42fcf8e7ad4a9g38901"
              },
              "description": "Blog Id"
            }
          ],
          "responses": {
            "200": {
              "description": "Blog Updated successfull!"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            }
           
          }
        }
      },
      "/blogs/delete/{Id}": {
        "delete": {
          "tags": ["Blog"],
          "summary": "Delete A Blog",
          "description": "Delete A Blog based on Blog id.",
          "parameters": [
            {
              "name": "Id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1e42fcf8e7ad4a9g38901"
              },
              "description": "Blog Id"
            }
          ],
          "responses": {
            "200": {
              "description": "Blog deleted successfull!"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            }
          }
        }
      },
      "/blogs/{id}/comments":{
        "get": {
          "tags": ["Comments"],
          "summary": "Getting all comments listed on a blog ",
          "description": "Pass in an ID of the blog to get all comments",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1d9379f46680630b65fd0"
              },
              "description": "Comment ID"
            }
          ],
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Comments retrived successfuly."
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/{id}/comments/new": {
        "post": {
          "tags": ["Comments"],
          "summary": "Adding a comment on a blog ",
          "description": "To comment on a blog, provide an ID of the blog you want to comment on",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1d9379f46680630b65fd0"
              },
              "description": "Blog Id"
            }
          ],
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully!"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/{id}/comments/delete": {
        "delete": {
          "tags": ["Comments"],
          "summary": "Deleting a comment  ",
          "description": "To delete a comment, pass in the id of the comment",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1d9379f46680630b65fd0"
              },
              "description": "Blog Id"
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully!"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/{id}/comments/edit": {
        "patch": {
          "tags": ["Comments"],
          "summary": "Edit a comment on a blog ",
          "description": "To edit a comment on a blog, provide an ID of the comment you want to edit",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1d9379f46680630b65fd0"
              },
              "description": "Comment ID"
            }
          ],
          "requestBody": {
            "required": "true",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully!"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/blogs/{id}/like": {
        "patch": {
          "tags": ["Like"],
          "summary": "Liking a blog ",
          "description": "To like a blog, you have to pass in the id of the blog you want to like",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": "65d1d9379f46680630b65fd0"
              },
              "description": "User Id"
            }
          ],
          "responses": {
            "201": {
              "description": "Like added successfully!"
            },
            "409": {
              "$ref": "#/components/responses/ConflictError"
            },
            "422": {
              "$ref": "#/components/responses/ValidationError"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      }
    }
  }
  